{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthika\\\\Desktop\\\\karthika\\\\CODE\\\\clone\\\\project\\\\reference_application\\\\project_mern_memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport { GoogleLogin } from '@react-oauth/google';\nimport Icon from './icon';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nexport const Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignUp] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = () => {\n    console.log('Submitted');\n  };\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    console.log(res);\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessful. Try Again Later\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, isSignup ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Reapt Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, isSignup ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n    className: classes.googleButton,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: renderProps.onClick,\n    disabled: renderProps.disabled,\n    startIcon: /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }\n    }),\n    variant: \"contained\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, isSignup ? \"Already have an account? Sign In\" : \"Don't have an account? Sign Up\"))))));\n};","map":{"version":3,"sources":["C:/Users/Karthika/Desktop/karthika/CODE/clone/project/reference_application/project_mern_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","TextField","GoogleLogin","Icon","LockOutlinedIcon","useStyles","Input","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignUp","handleShowPassword","prevShowPassword","handleSubmit","console","log","handleChange","switchMode","prevIsSignUp","googleSuccess","res","googleFailure","paper","avatar","form","submit","googleButton","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\r\nimport {GoogleLogin} from '@react-oauth/google'\r\n\r\nimport Icon from './icon';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport useStyles from './styles'\r\nimport Input from './Input';\r\n\r\nexport const Auth = () => {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [isSignup, setIsSignUp] = useState(false)\r\n\r\n  const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword)\r\n\r\n  const handleSubmit = () => {\r\n    console.log('Submitted');\r\n  }\r\n\r\n  const handleChange = () => {\r\n\r\n  }\r\n\r\n  const switchMode = () => {\r\n    setIsSignUp((prevIsSignUp) => !prevIsSignUp)\r\n    handleShowPassword(false)\r\n  }\r\n\r\n  const googleSuccess = async (res) => {\r\n    console.log(res)\r\n  }\r\n\r\n  const googleFailure = () => {\r\n    console.log(\"Google Sign In was unsuccessful. Try Again Later\")\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign In\"}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isSignup && (\r\n              <>\r\n                <Input\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  handleChange={handleChange}\r\n                  autoFocus\r\n                  half\r\n                />\r\n                <Input\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  handleChange={handleChange}\r\n                  half\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              handleChange={handleChange}\r\n              type=\"email\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              handleChange={handleChange}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              handleShowPassword={handleShowPassword}\r\n            />\r\n            {isSignup && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Reapt Password\"\r\n                handleChange={handleChange}\r\n                type=\"password\"\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n          </Button>\r\n          <GoogleLogin\r\n            className={classes.googleButton}\r\n            color=\"primary\"\r\n            fullWidth\r\n            onClick={renderProps.onClick}\r\n            disabled={renderProps.disabled}\r\n            startIcon={<Icon />}\r\n            variant=\"contained\"\r\n            render={(renderProps) => (\r\n              <Button>Google Sign In</Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy='single_host_origin'\r\n          />\r\n          \r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                {isSignup\r\n                  ? \"Already have an account? Sign In\"\r\n                  : \"Don't have an account? Sign Up\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}