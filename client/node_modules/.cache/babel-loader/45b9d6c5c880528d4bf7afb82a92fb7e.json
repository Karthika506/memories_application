{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthika\\\\Desktop\\\\karthika\\\\CODE\\\\clone\\\\project\\\\reference_application\\\\project_mern_memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { useDispatch } from 'react-redux';\nimport { jwtDecode } from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport Icon from './icon';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\nexport const Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const token = res === null || res === void 0 ? void 0 : res.credential;\n    const result = jwtDecode(token);\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google Sign In was unsuccessful. Try Again Later\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, isSignup ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Reapt Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, isSignup ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, isSignup ? \"Already have an account? Sign In\" : \"Don't have an account? Sign Up\")))), /*#__PURE__*/React.createElement(GoogleLogin, {\n    className: classes.googleButton,\n    color: \"primary\",\n    fullWidth: true,\n    startIcon: /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 24\n      }\n    }),\n    variant: \"contained\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Users/Karthika/Desktop/karthika/CODE/clone/project/reference_application/project_mern_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","TextField","GoogleLogin","useDispatch","jwtDecode","useNavigate","Icon","LockOutlinedIcon","useStyles","Input","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignUp","formData","setFormData","dispatch","navigate","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","console","log","handleChange","target","name","value","switchMode","prevIsSignUp","googleSuccess","res","token","credential","result","type","data","error","googleFailure","paper","avatar","form","submit","googleButton","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\r\nimport {GoogleLogin} from '@react-oauth/google'\r\nimport { useDispatch } from 'react-redux';\r\nimport {jwtDecode} from 'jwt-decode';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nimport Icon from './icon';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '',  confirmPassword: ''}\r\n\r\nexport const Auth = () => {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSignup, setIsSignUp] = useState(false);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  const switchMode = () => {\r\n    setIsSignUp((prevIsSignUp) => !prevIsSignUp)\r\n    handleShowPassword(false)\r\n  }\r\n\r\n  const googleSuccess = async (res) => {\r\n    const token = res?.credential;\r\n    const result = jwtDecode(token);\r\n    try{\r\n        dispatch({type: 'AUTH', data: {result, token}});\r\n        navigate('/');\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n  }\r\n\r\n  const googleFailure = () => {\r\n    console.log(\"Google Sign In was unsuccessful. Try Again Later\")\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign In\"}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isSignup && (\r\n              <>\r\n                <Input\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  handleChange={handleChange}\r\n                  autoFocus\r\n                  half\r\n                />\r\n                <Input\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  handleChange={handleChange}\r\n                  half\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              handleChange={handleChange}\r\n              type=\"email\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              handleChange={handleChange}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              handleShowPassword={handleShowPassword}\r\n            />\r\n            {isSignup && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Reapt Password\"\r\n                handleChange={handleChange}\r\n                type=\"password\"\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n          </Button>\r\n          \r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                {isSignup\r\n                  ? \"Already have an account? Sign In\"\r\n                  : \"Don't have an account? Sign Up\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <GoogleLogin\r\n            className={classes.googleButton}\r\n            color=\"primary\"\r\n            fullWidth\r\n            \r\n            startIcon={<Icon />}\r\n            variant=\"contained\"\r\n            render={(renderProps) => (\r\n              <Button onClick={renderProps.onClick} disabled={renderProps.disabled}>Google Sign In</Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy='single_host_origin'\r\n          />\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}